def merge_sort(arr):
    """
    Сортирует список arr алгоритмом сортировки слиянием.

    Args:
        arr: Список, который нужно отсортировать.

    Returns:
        Отсортированный список.
    """

    if len(arr) <= 1:
        return arr  # Базовый случай: список из 0 или 1 элемента уже отсортирован

    # 1. Разделение списка на две половины
    mid = len(arr) // 2  # Находим середину списка
    left = arr[:mid]    # Создаем левую половину списка
    right = arr[mid:]   # Создаем правую половину списка

    # 2. Рекурсивная сортировка каждой половины
    left = merge_sort(left)   # Рекурсивно сортируем левую половину
    right = merge_sort(right)  # Рекурсивно сортируем правую половину

    # 3. Слияние отсортированных половин
    return merge(left, right)  # Вызываем функцию слияния для объединения отсортированных половин
#вспомогательная функция
def merge(left, right):
    """
    Сливает два отсортированных списка left и right в один отсортированный список.

    Args:
        left: Отсортированный список.
        right: Отсортированный список.

    Returns:
        Объединенный отсортированный список.
    """

    result = []  # Инициализируем пустой список для хранения результата
    i = 0        # Индекс для итерации по левому списку
    j = 0        # Индекс для итерации по правому списку

    # Сравниваем элементы из left и right и добавляем наименьший в result
    while i < len(left) and j < len(right):
        if left[i] <= right[j]:
            result.append(left[i])  # Добавляем элемент из left, если он меньше или равен
            i += 1                   # Переходим к следующему элементу в left
        else:
            result.append(right[j]) # Добавляем элемент из right, если он меньше
            j += 1                   # Переходим к следующему элементу в right

    # Добавляем оставшиеся элементы из left (если они есть)
    result += left[i:]

    # Добавляем оставшиеся элементы из right (если они есть)
    result += right[j:]

    return result # Возвращаем отсортированный и объединенный список